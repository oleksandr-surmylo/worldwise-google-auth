{"version":3,"file":"static/js/480.5d1be46d.chunk.js","mappings":"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","sources":["webpack://worldwise/./src/components/Sidebar/Sidebar.module.css?6ffa","webpack://worldwise/./src/components/AppNav/AppNav.module.css?cde5","components/AppNav/AppNav.tsx","components/Sidebar/Sidebar.tsx","webpack://worldwise/./src/pages/AppLayout.module.css?e3d1","webpack://worldwise/./src/components/Map/Map.module.css?2f12","components/Map/Map.js","hooks/useGeolocation.js","webpack://worldwise/./src/components/User/User.module.css?54eb","components/User/User.tsx","pages/AppLayout.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"sidebar\":\"Sidebar_sidebar__2eihC\",\"footer\":\"Sidebar_footer__cKhkc\",\"copyright\":\"Sidebar_copyright__jKrmd\"};","// extracted by mini-css-extract-plugin\nexport default {\"nav\":\"AppNav_nav__d7313\"};","import React from 'react';\r\nimport styles from './AppNav.module.css'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst AppNav = () => {\r\n    return (\r\n        <nav className={ styles.nav }>\r\n            <ul>\r\n                <li>\r\n                    <NavLink to='cities'>Cities</NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to='countries'>Countries</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default AppNav;","import React from 'react';\r\nimport styles from './Sidebar.module.css'\r\nimport Logo from \"../Logo\";\r\nimport AppNav from \"../AppNav/AppNav\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className={ styles.sidebar }>\r\n            <Logo/>\r\n            <AppNav/>\r\n\r\n            <Outlet/>\r\n\r\n            <footer className={ styles.footer }>\r\n                <p className={ styles.copyright }>\r\n                    &copy; Copyright { new Date ().getFullYear () } by WorldWise Inc.\r\n                </p>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"AppLayout_app__A7Y67\"};","// extracted by mini-css-extract-plugin\nexport default {\"mapContainer\":\"Map_mapContainer__NmRUJ\",\"map\":\"Map_map__ZBBh1\"};","import React, { useEffect, useState } from 'react';\r\nimport styles from './Map.module.css'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap, useMapEvent } from 'react-leaflet'\r\nimport { useCitiesContext } from \"../../contexts/CitiesContext/CitiesContext\";\r\nimport { useGeolocation } from \"../../hooks/useGeolocation\";\r\nimport Button from \"../Button/Button\";\r\nimport { useUrlPosition } from \"../../hooks/useUrlPosition\";\r\n\r\nconst Map = () => {\r\n  const { cities } = useCitiesContext()\r\n  const [ mapPosition, setMapPosition ] = useState( [ '50', '12' ] )\r\n  const {\r\n    isLoading: isLoadingPosition,\r\n    position: geolocationPosition,\r\n    getPosition\r\n  } = useGeolocation()\r\n\r\n  const [ mapLat, mapLng ] = useUrlPosition()\r\n\r\n  useEffect( () => {\r\n    if ( mapLat && mapLng ) {\r\n      setMapPosition( [ mapLat, mapLng ] )\r\n    }\r\n  }, [ mapLat, mapLng ] )\r\n\r\n  useEffect( () => {\r\n    if ( geolocationPosition ) {\r\n      setMapPosition( [ geolocationPosition.lat, geolocationPosition.lng ] )\r\n\r\n    }\r\n  }, [ geolocationPosition ] )\r\n\r\n  return (\r\n    <div className={ styles.mapContainer }>\r\n      { !geolocationPosition && <Button\r\n        onClick={ getPosition }\r\n        type=\"position\">\r\n        { isLoadingPosition ? 'Loading...' : \"Use your position\" }\r\n      </Button> }\r\n      <MapContainer\r\n        className={ styles.map }\r\n        center={ mapPosition }\r\n        zoom={ 13 }\r\n        scrollWheelZoom={ true }>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        { cities.map( city => (\r\n          <Marker position={ [ city.position.lat, city.position.lng ] } key={ city.id }>\r\n            <Popup>\r\n              <img src={ city.emoji } style={ { width: '20px' } }\r\n                   alt={ city.cityName }></img><span>{ city.cityName }</span>\r\n            </Popup>\r\n          </Marker>\r\n        ) ) }\r\n        <ChangeCenter position={ mapPosition }/>\r\n        <DetectClick/>\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction ChangeCenter( { position } ) {\r\n  const map = useMap();\r\n  map.setView( position )\r\n}\r\n\r\nfunction DetectClick() {\r\n  const navigate = useNavigate()\r\n\r\n  useMapEvent( {\r\n    click: e => {\r\n      navigate( `form?lat=${ e.latlng.lat }&lng=${ e.latlng.lng }` )\r\n    }\r\n  } )\r\n}\r\n\r\nexport default Map;","import { useState } from \"react\";\r\n\r\nexport function useGeolocation( defaultPosition = null ) {\r\n  const [ isLoading, setIsLoading ] = useState( false );\r\n  const [ position, setPosition ] = useState( defaultPosition );\r\n  const [ error, setError ] = useState( null );\r\n\r\n  function getPosition() {\r\n    if ( !navigator.geolocation )\r\n      return setError( \"Your browser does not support geolocation\" );\r\n\r\n    setIsLoading( true );\r\n    navigator.geolocation.getCurrentPosition(\r\n      ( pos ) => {\r\n        setPosition( {\r\n          lat: pos.coords.latitude,\r\n          lng: pos.coords.longitude\r\n        } );\r\n        setIsLoading( false );\r\n      },\r\n      ( error ) => {\r\n        setError( error.message );\r\n        setIsLoading( false );\r\n      }\r\n    );\r\n  }\r\n\r\n  return { isLoading, position, error, getPosition };\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"User_user__qArZh\",\"text\":\"User_text__cSBQ9\",\"textName\":\"User_textName__0r-FW\",\"k\":\"User_k__bOzPg\"};","import styles from \"./User.module.css\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"../Button/Button\";\nimport { signOut } from \"firebase/auth\";\nimport { auth } from \"../../utils/firebase/firebase.utils\";\n\nfunction User() {\n    const { user, logout } = useAuth()\n\n    const navigate = useNavigate()\n\n    async function handleClick() {\n        try {\n            await signOut( auth )\n            logout()\n            navigate( \"/\", { replace: true } );\n        } catch ( err: unknown ) {\n            if ( err instanceof Error ) {\n                console.error( err.message )\n            } else console.log ( \"Unknown Error\" )\n        }\n    }\n\n    if ( user ) {\n        return (\n            <div className={ styles.user }>\n                <img src={ user.photoURL ?? 'https://i.pravatar.cc/100?u=zz' } alt={ user && 'User' }/>\n                <div className={ styles.userBlock }>\n                    <span className={ styles.text }>Welcome,</span>\n                    <span className={ styles.textName }>{ user.displayName }</span>\n                </div>\n                <Button onClick={ handleClick }>Logout</Button>\n            </div>\n        );\n    } else return null\n}\n\nexport default User;\n\n/*\nCHALLENGE\n\n1) Add `AuthProvider` to `App.jsx`\n2) In the `Authorization.tsx` page, call `login()` from context\n3) Inside an effect, check whether `isAuthenticated === true`. If so, programatically navigate to `/app`\n4) In `User.js`, read and display logged in user from context (`user` object). Then include this component in `AppLayout.js`\n5) Handle logout button by calling `logout()` and navigating back to `/`\n*/\n","import React from 'react';\r\nimport Sidebar from \"../components/Sidebar/Sidebar\";\r\nimport styles from './AppLayout.module.css';\r\nimport Map from \"../components/Map/Map\";\r\nimport User from \"../components/User/User\";\r\n\r\nconst AppLayout = () => {\r\n    return (\r\n        <div className={ styles.app }>\r\n            <Sidebar/>\r\n            <Map/>\r\n            <User/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppLayout;"],"names":["AppNav","_jsx","className","styles","children","_jsxs","NavLink","to","Sidebar","Logo","Outlet","Date","getFullYear","ChangeCenter","_ref","position","useMap","setView","DetectClick","navigate","useNavigate","useMapEvent","click","e","concat","latlng","lat","lng","Map","cities","useCitiesContext","mapPosition","setMapPosition","useState","isLoading","isLoadingPosition","geolocationPosition","getPosition","defaultPosition","arguments","length","undefined","setIsLoading","setPosition","error","setError","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","message","useGeolocation","mapLat","mapLng","useUrlPosition","useEffect","Button","onClick","type","MapContainer","center","zoom","scrollWheelZoom","TileLayer","attribution","url","map","city","Marker","Popup","src","emoji","style","width","alt","cityName","id","user","logout","useAuth","_user$photoURL","photoURL","userBlock","text","textName","displayName","async","signOut","auth","replace","err","Error","console","log","AppLayout","User"],"sourceRoot":""}